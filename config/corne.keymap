/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 3 2 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38 39 40 41>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 6 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  none |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | none |
            // | none |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  none   |
            // | none |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | none  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &HML RIGHT_BRACKET Q  &kp W            &kp E           &kp R              &kp T              &kp Y             &kp U               &kp I            &kp O             &HMR RIGHT_BRACKET P  &none
&none  &HML CAPS A           &HML LEFT_ALT S  &HML LCTRL D    &HML LEFT_SHIFT F  &HML LEFT_WIN G    &HMR RIGHT_WIN H  &HML RIGHT_SHIFT J  &HML RCTRL K     &HMR RIGHT_ALT L  &HMR SQT SEMI         &none
&none  &kp Z                 &kp X            &kp C           &kp V              &kp B              &kp N             &kp M               &kp COMMA        &kp DOT           &HMR BACKSLASH FSLH   &none
                                              &kp LEFT_SHIFT  &lt 1 ENTER        &lt 3 TAB          &kp RET           &mo 2               &kp RIGHT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  none |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | none |
            // | none| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |   none   |
            // | none |     |     |     |     |     |   |     |     |     |     |     |   none   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &none
&none  &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &none
                                   &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  none |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | none |
            // | none |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  none   |
            // | none |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  none   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &none
&none  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &none
                         &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &trans       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &trans       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &trans       &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &lt 4 BACKSPACE  &lt 2 SPACE  &trans
            >;
        };
    };
};
